# Memory
CONFIG_HEAP_MEM_POOL_SIZE=2048
CONFIG_MAIN_STACK_SIZE=2048
CONFIG_PIPES=y

# Workqueue
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=2048

# Threads
CONFIG_MAIN_THREAD_PRIORITY=5

# GPIO
CONFIG_GPIO=y

# Enable the UART driver
CONFIG_UART_ASYNC_API=y
CONFIG_NRFX_UARTE0=y
CONFIG_SERIAL=y
CONFIG_CONSOLE=y
CONFIG_UART_CONSOLE=n

# Enable the BLE stack with device as peripheral
CONFIG_BT=y
CONFIG_BT_PERIPHERAL=y
CONFIG_BT_DEVICE_NAME="my_ble_device"
CONFIG_BT_DEVICE_APPEARANCE=833
CONFIG_BT_MAX_CONN=1
CONFIG_BT_MAX_PAIRED=1

# \todo: We should investigate the need for CONFIG_BT_SMP. Explanation:
#        Not used in peripheral_uart sample app but appears to be needed otherwise get compiler errors
#        undefined reference to `bt_conn_auth_cb_register' and `bt_conn_auth_info_cb_register'.
#        This option enables support for the Security Manager Protocol (SMP), making it possible 
#        to pair devices over BLE. Seems like we need it but not sure why it's not in sample app
CONFIG_BT_SMP=y

# Enable the BLE modules from NCS
CONFIG_BT_NUS=y

# Enable bonding
CONFIG_BT_SETTINGS=y
CONFIG_FLASH=y
CONFIG_FLASH_PAGE_LAYOUT=y
CONFIG_FLASH_MAP=y
CONFIG_NVS=y
CONFIG_SETTINGS=y

# Config logger
CONFIG_LOG=y
CONFIG_RTT_CONSOLE=y
CONFIG_USE_SEGGER_RTT=y
CONFIG_LOG_BACKEND_RTT=y
CONFIG_LOG_BACKEND_UART=n
CONFIG_LOG_PRINTK=n
CONFIG_LOG_MODE_MINIMAL=y

CONFIG_ASSERT=y

# C++ support
CONFIG_CPP=y
# zephyr uses C++11 by default, update to C++20 (most recent supported in v3.4.99)
# See options at zephyr/lib/cpp/Kconfig
CONFIG_STD_CPP20=y
# Enable the C++ standard library
CONFIG_GLIBCXX_LIBCPP=y